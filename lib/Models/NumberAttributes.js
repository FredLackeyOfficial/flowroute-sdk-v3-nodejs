/**
 * FlowrouteNumbersAndMessagingLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of NumberAttributes
 */
class NumberAttributes extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.alias = this.constructor.getValue(obj.alias);
        this.cnamLookupsEnabled =
          this.constructor.getValue(obj.cnamLookupsEnabled
     || obj.cnam_lookups_enabled);
        this.numberType = this.constructor.getValue(obj.numberType || obj.number_type);
        this.rateCenter = this.constructor.getValue(obj.rateCenter || obj.rate_center);
        this.state = this.constructor.getValue(obj.state);
        this.value = this.constructor.getValue(obj.value);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'alias', realName: 'alias' },
            { name: 'cnamLookupsEnabled', realName: 'cnam_lookups_enabled' },
            { name: 'numberType', realName: 'number_type' },
            { name: 'rateCenter', realName: 'rate_center' },
            { name: 'state', realName: 'state' },
            { name: 'value', realName: 'value' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = NumberAttributes;
